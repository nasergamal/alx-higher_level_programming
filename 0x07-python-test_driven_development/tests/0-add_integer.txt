add_integer_test
================


	
	>>> add_integer = __import__('0-add_integer').add_integer

	normal addition tests	
	>>> print(add_integer(10, 50))
	60

	>>> print(add_integer(0, 0))
	0

	>>> print(add_integer(-1, 1))
	0

	>>> print(add_integer(2.5, 2.5))
        4

	>>> print(add_integer(-99, -99))
	-198
	>>> print(add_integer(1.0, 1.0))
	2

	>>> print(add_integer(999999999999, 1000000000001))
        2000000000000

	Exception tests
	>>> print(add_integer(1.0, 'one maybe'))
	Traceback (most recent call last):
	   ...
	TypeError: b must be an integer
	
	>>> print(add_integer('ok maybe two', 4))
        Traceback (most recent call last):
           ...
        TypeError: a must be an integer

	>>> add_integer(2,float('inf'))
	Traceback (most recent call last):
	   ...
	OverflowError: cannot convert float infinity to integer
	
	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	   ...
	ValueError: cannot convert float NaN to integer

	>>> add_integer()
	Traceback (most recent call last):
	   ...
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> add_integer(1)
	99
