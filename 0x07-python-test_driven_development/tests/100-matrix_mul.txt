matrix multiplication
=====================


	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

	||| normal tests

	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	[[7, 10], [15, 22]]

	>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
	[[13, 16]]


	||| errors 

	>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[9, 8, 7], [6, 5, 4]])
	Traceback (most recent call last):
   	   ...
	ValueError: if len(m_a[0]) != len(m_b):

	>>> matrix_mul([[]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	   ...
	ValueError: m_a can't be empty

	>>> matrix_mul([[1, 2], [3, 4]], [])
	Traceback (most recent call last):
	   ...
	ValueError: m_b can't be empty

	>>> matrix_mul(1, 3)
	Traceback (most recent call last):
	   ...
	TypeError: m_a must be a list


	>>> matrix_mul([[1, 2], [3, 4]], 3)
	Traceback (most recent call last):
	   ...
	TypeError: m_b must be a list


	>>> matrix_mul([1, 2], [[4, 5], [6, 7]])
	Traceback (most recent call last):
	   ...
	TypeError: m_a must be a list of lists


	>>> matrix_mul([[1, 2], [3, 4]], [6, 7])
	Traceback (most recent call last):
	   ...
	TypeError: m_b must be a list of lists

	>>> matrix_mul([['123']], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	   ...
	TypeError: m_a should contain only integers or floats

	>>> matrix_mul([[1, 2], [3, 4]], [['sd']])
	Traceback (most recent call last):
	   ... 
	TypeError: m_b should contain only integers or floats

	>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	   ...
	TypeError: each row of m_a must be of the same size

	>>> matrix_mul([[1, 2]], [[3, 4], [5, 6, 7]])
	Traceback (most recent call last):
	   ...
	TypeError: each row of m_b must be of the same size
